---
export type Props = {
	noUnderline?: boolean
}

const { noUnderline } = Astro.props as Props
---

<span
	id="container"
	class={`text-primary-900 dark:text-primary-100 inline-block w-max relative pt-1 mx-2 px-0 hover:px-2 hover:mx-0 focus-within:px-2 focus-within:mx-0 duration-100 delay-200 hover:delay-[0ms] focus-within:delay-[0ms] ${
		noUnderline
			? 'border-transparent pb-px'
			: 'border-primary-800 dark:border-primary-100'
	} border-b border-solid hover:border-primary-600 hover:dark:border-primary-400 focus-within:border-primary-600 focus-within:dark:border-primary-400 transition-[padding,margin,border-color] hover:text-accent-600 hover:dark:text-accent-400 focus-within:text-accent-600 focus-within:dark:text-accent-400 outline-none `}>
	<slot />
</span>

<style>
	#container :global(a, button) {
		z-index: 30;
		position: relative;
	}

	#container:focus-within :global(*) {
		outline: none;
	}

	#container::before,
	#container::after {
		/*[>layout, size<]*/
		--b-width: 1px;
		display: inline-block;
		position: absolute;
		bottom: -1px;
		height: 0%;
		width: 0%;
		transition: width 100ms, height 100ms 100ms;

		/*[> appearance <]*/
		border-top-width: var(--b-width);
		border-color: inherit;
		border-style: inherit;
		content: ' ';
		z-index: 0;
	}

	#container::before {
		left: 0;
		border-left-width: var(--b-width);
	}

	#container::after {
		right: 0;
		border-right-width: var(--b-width);
	}

	#container:hover::before,
	#container:focus-within::before,
	#container:hover::after,
	#container:focus-within::after {
		transition: height 100ms 100ms, width 100ms 200ms;
		height: 100%;
		width: 51%;
	}

	@media (prefers-reduced-motion: reduce) {
		*,
		*::before,
		*::after {
			transition: none !important;
		}
	}
</style>
